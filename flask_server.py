#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
flask_server.py ‚Äî –ü—Ä–æ—Å—Ç–æ–π Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –º–æ–¥–µ–ª–∏
"""

import json
import mlflow
import mlflow.sklearn
from flask import Flask, request, jsonify
import pandas as pd
import numpy as np

app = Flask(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ MLflow
def load_model():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ run"""
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π run
        client = mlflow.tracking.MlflowClient()
        runs = client.search_runs(experiment_ids=["0"], max_results=1)
        
        if not runs:
            raise Exception("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö runs")
        
        latest_run = runs[0]
        run_id = latest_run.info.run_id
        model_uri = f"runs:/{run_id}/model"
        
        print(f"üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –∏–∑ run: {run_id}")
        model = mlflow.sklearn.load_model(model_uri)
        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
        return model
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
        return None

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
model = load_model()

@app.route('/health', methods=['GET'])
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({"status": "healthy", "model_loaded": model is not None})

@app.route('/invocations', methods=['POST'])
def predict():
    """–≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
    try:
        if model is None:
            return jsonify({"error": "–ú–æ–¥–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"}), 500
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        data = request.get_json()
        
        if not data:
            return jsonify({"error": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ"}), 400
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö
        if 'columns' not in data or 'data' not in data:
            return jsonify({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û–∂–∏–¥–∞–µ—Ç—Å—è {columns: [...], data: [[...], [...]]}"}), 400
        
        # –°–æ–∑–¥–∞–µ–º DataFrame
        df = pd.DataFrame(data['data'], columns=data['columns'])
        
        # –î–µ–ª–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        predictions = model.predict(df)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return jsonify(predictions.tolist())
        
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route('/', methods=['GET'])
def info():
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ"""
    return jsonify({
        "message": "MLflow Model Inference Server",
        "endpoints": {
            "/health": "GET - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è",
            "/invocations": "POST - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è",
            "/": "GET - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        },
        "model_loaded": model is not None
    })

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –º–æ–¥–µ–ª–∏")
    print("üì° –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://127.0.0.1:5000")
    print("üîó –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("   GET  /health      - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    print("   POST /invocations - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
    print("   GET  /            - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    
    app.run(host='127.0.0.1', port=5000, debug=True)
